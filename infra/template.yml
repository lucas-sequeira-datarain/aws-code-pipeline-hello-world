AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda Function

Parameters:
  FunctionName:
    Type: String
    Default: 'lucas-lambda-function'
    Description: Name of the Lambda function
  Handler:
    Type: String
    Default: 'app.lambda_function.lambda_handler'
    Description: Name of the Lambda function handler
  S3BucketName:
    Type: String
    Default: 'lucas-bucket-hello-world'
    Description: Name of the S3 bucket
  S3Key:
    Type: String
    Default: 'compressed/app.zip'
    Description: Key of the S3 bucket


Resources:
  Function:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref FunctionName
      Handler: !Ref Handler
      Role: !GetAtt FunctionRole.Arn
      Code:
        S3Bucket: !Ref S3BucketName
        S3Key: !Ref S3Key
      Runtime: python3.9
      Timeout: 10

  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: lambda-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:ListFunctions
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - '*'
